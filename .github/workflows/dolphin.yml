name: Build Dolphin

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake ffmpeg libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libevdev-dev libusb-1.0-0-dev libxrandr-dev libxi-dev libpangocairo-1.0-0 qt6-base-private-dev libqt6svg6-dev libbluetooth-dev libasound2-dev libpulse-dev libgl1-mesa-dev libcurl4-openssl-dev
          sudo apt-get install -y libudev-dev libsystemd-dev || sudo apt-get install -y libeudev-dev #distros without systemd like AntiX must use eudev instead

      - name: Clone Dolphin repository
        run: git clone https://github.com/dolphin-emu/dolphin

      - name: Update submodules
        run: |
          cd dolphin
          git -c submodule."Externals/Qt".update=none \
            -c submodule."Externals/FFmpeg-bin".update=none \
            -c submodule."Externals/libadrenotools".update=none \
            submodule update --init --recursive \
            && git pull --recurse-submodules

      - name: Build Dolphin
        run: |
          cd dolphin
          mkdir build && cd build
          cmake .. -DLINUX_LOCAL_DEV=true
          make -j$(nproc)
          cp -r ../Data/Sys/ Binaries/
          touch Binaries/portable.txt

      - name: Upload Dolphin binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: Dolphin-binary
          path: dolphin/build/Binaries
